name: Release Binary

on:
  push:
    branches:
      - main
    paths:
      - nerdfonts_installer.c
    tags:
      - 'v*.*.*.*'  # Triggers on tags like v2025.09.16.1
  release:
    types: [published, edited, released]
  workflow_dispatch:  # For manual testing

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for changelog

    - name: Set up Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libjansson-dev build-essential

    - name: Install GitHub CLI
      run: |
        sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.MY_GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          version="${GITHUB_REF#refs/tags/v}"  # Use tag name, e.g., 2025.09.16.1
          echo "Using tag version: ${version}"
        else
          base_version=$(date +'%Y.%m.%d')
          commit_count=$(git rev-list --count HEAD)
          counter=1
          while true; do
            if [ $counter -eq 1 ]; then
              version="${base_version}.${commit_count}"
            else
              version="${base_version}.${commit_count}000${counter}"
            fi
            if gh release view "v${version}" >/dev/null 2>&1; then
              echo "Release v${version} already exists, incrementing..."
              counter=$((counter + 1))
            else
              echo "Using generated version: ${version}"
              break
            fi
          done
        fi
        echo "version=${version}" >> $GITHUB_OUTPUT

    - name: Build binary
      run: |
        mkdir -p release
        make
        mv nerdfonts-installer release/nerdfonts-installer
        chmod +x release/nerdfonts-installer

    - name: Create source tarball
      run: |
        version="${{ steps.version.outputs.version }}"
        git archive --format=tar.gz --output "release/nerdfonts-installer-${version}.tar.gz" HEAD
        echo "Version: ${version}" > release/version.txt

    - name: Create release
      id: create_release
      run: |
        version="${{ steps.version.outputs.version }}"
        changelog=$(git log --oneline --pretty=format:"* %s (%h)" | head -n 20)
        echo "Changelog: $changelog" > release/changelog.txt
        gh release create "v${version}" \
          release/nerdfonts-installer \
          release/nerdfonts-installer-${version}.tar.gz \
          release/changelog.txt \
          --title "Release v${version}" \
          --notes "$changelog"

    - name: Clean up old binaries
      run: |
        rm release/nerdfonts-installer
