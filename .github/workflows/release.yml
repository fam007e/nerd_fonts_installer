name: Release Binary

on:
  push:
    branches:
      - main # For CI builds on main branch
  pull_request:
    branches:
      - main # For PRs targeting main
  release:
    types: [published, edited, released] # For actual GitHub Releases
  workflow_dispatch: # For manual testing

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for changelog

    - name: Set up Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libjansson-dev build-essential

    - name: Install GitHub CLI
      run: |
        sudo apt-get install -y gh

    - name: Authenticate GitHub CLI
      run: |
        echo "${{ secrets.MY_GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
          version="${GITHUB_REF#refs/tags/v}" # Use tag name directly
          echo "Using tag version: ${version}"
        else
          # Generate an AUR-compatible version for non-tag builds (e.g., CI)
          # Format: YYYY.MM.DD.HHMM.CommitCount
          version=$(date +'%Y.%m.%d.%H%M').$(git rev-list --count HEAD)
          echo "Using generated CI version: ${version}"
        fi
        echo "version=${version}" >> $GITHUB_OUTPUT

    - name: Build binary
      run: |
        mkdir -p release
        make
        mv nerdfonts-installer release/nerdfonts-installer
        chmod +x release/nerdfonts-installer

    - name: Create source tarball
      run: |
        version="${{ steps.version.outputs.version }}"
        git archive --format=tar.gz --output "release/nerdfonts-installer-${version}.tar.gz" HEAD
        echo "Version: ${version}" > release/version.txt

    - name: Create release
      id: create_release
      if: github.event_name == 'release'
      run: |
        version="${{ steps.version.outputs.version }}"
        changelog=$(git log --oneline --pretty=format:"* %s (%h)" | head -n 20)
        echo "Changelog: $changelog" > release/changelog.txt
        gh release create "v${version}" \
          release/nerdfonts-installer \
          release/nerdfonts-installer-${version}.tar.gz \
          release/changelog.txt \
          --title "Release v${version}" \
          --notes "$changelog"

    - name: Clean up old binaries
      run: |
        rm release/nerdfonts-installer

